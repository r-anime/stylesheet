name: Build and deploy
on: push

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Use Node LTS
      uses: actions/setup-node@v4
      with:
        node-version: 'lts/*'

    - name: Install build script dependencies
      run: npm ci

    - name: Detect target environment
      id: target
      run: |
        if [ "$GITHUB_REF" == "refs/heads/main" ]; then
          echo Targeting /r/anime
          echo "environment=production" >> $GITHUB_OUTPUT
          echo "subreddit=anime" >> $GITHUB_OUTPUT
        else
          echo Targeting /r/animestaging
          echo "environment=staging" >> $GITHUB_OUTPUT
          echo "subreddit=animestaging" >> $GITHUB_OUTPUT
        fi

    - name: Create GitHub deployment
      uses: chrnorm/deployment-action@v2
      id: deployment
      with:
        token: ${{ github.token }}
        environment-url: https://old.reddit.com/r/${{ steps.target.outputs.subreddit }}
        environment: ${{ steps.target.outputs.environment }}

    - name: Build and deploy
      env:
        REDDIT_USERNAME: AnimeMod
        REDDIT_PASSWORD: ${{ secrets.ANIMEMOD_PASSWORD }}
        REDDIT_TOTP_SECRET: ${{ secrets.ANIMEMOD_TOTP_SECRET }}
        REDDIT_CLIENT_ID: ${{ secrets.STYLESHEET_CLIENT_ID }}
        REDDIT_CLIENT_SECRET: ${{ secrets.STYLESHEET_CLIENT_SECRET }}
        REDDIT_REDIRECT_URI: ${{ secrets.STYLESHEET_REDIRECT_URI }}
      run: |
        npm run build -- \
          --deploy-to-subreddit="${{ steps.target.outputs.subreddit }}" \
          --reason="${{ github.event.compare }}"

    - name: Update deployment status (success)
      if: success()
      uses: chrnorm/deployment-status@v2
      with:
        token: ${{ github.token }}
        state: success
        deployment-id: ${{ steps.deployment.outputs.deployment_id }}

    - name: Update deployment status (failure)
      if: failure()
      uses: chrnorm/deployment-status@v2
      with:
        token: ${{ github.token }}
        state: failure
        deployment-id: ${{ steps.deployment.outputs.deployment_id }}
